name: build
on:
  push:
    branches:
      - 'main'
      - 'run-*'
jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          file: Dockerfile.builder
          tags: ghcr.io/kwasd/gh-actions-test/builder:latest
  build-package:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/kwasd/gh-actions-test/builder:latest
      volumes:
        - /out:/out
    steps:
      - name: Touch sample file
        id: touch-sample-files
        run: echo "$(date +%s)" > hello.txt
      - name: List env
        run: env
      - name: Archive production artifacts
        id: upload_sample_files
        uses: actions/upload-artifact@v3
        with:
          name: dist-without-markdown
          path: |
            *.txt
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ./hello.txt
          asset_name: hello.txt
          asset_content_type: text/txt
